/////////////
// data ////
////////////

var posx = {"Frame_Shift_Ins": [124, 240, 239, 157, 110, 110, 201, 239, 77, 191, 86, 256, 261, 94, 234, 198, 53, 37, 257, 135, 104, 302, 224, 48, 329, 103, 65, 256, 80, 317, 195, 178, 156, 146, 223, 329, 215, 178, 281, 73, 73, 178, 73, 73, 362, 69, 341, 144, 265, 282, 130, 109, 167, 228, 316, 149, 123, 248, 163, 124, 165, 98, 195, 73, 278], "In_Frame_Ins": [176, 147, 241, 274, 274, 162], "Splice_Site": [187, 367, 331, 125, 225, 187, 187, 125, 225, 126, 307, 187, 225, 187, 331, 33, 126, 225, 33, 33, 187, 331, 331, 187, 33, 307, 331, 187, 224, 187, 261, 187, 225, 187, 126, 261, 332, 187, 307, 307, 126, 307, 126, 225, 32, 225, 225, 367, 307, 125, 33, 126, 332, 261, 225, 32, 307, 331, 32, 331, 307, 307, 331, 25, 32, 187, 224, 224, 187, 332, 367, 125, 33, 187, 224, 225, 224, 261, 33, 32, 261, 307, 33, 126, 187, 225, 307, 225, 126, 331, 33, 125, 331, 187, 225, 126, 125, 307, 331, 261, 332, 125, 225, 126, 187, 126, 331, 187, 331, 126, 261, 125, 225, 307, 261, 331, 187, 307, 331, 187, 307, 33, 187, 125, 224, 332, 307, 224, 187, 331, 33, 126, 126, 331, 307, 126, 224, 261, 125, 125, 126, 261, 307, 332], "Translation_Start_Site": [1], "Missense_Mutation": [220, 248, 279, 139, 273, 213, 194, 271, 277, 175, 275, 273, 248, 259, 242, 161, 285, 248, 248, 248, 273, 132, 204, 148, 285, 285, 273, 151, 244, 249, 271, 287, 245, 248, 214, 257, 280, 175, 285, 257, 287, 237, 238, 161, 161, 132, 159, 285, 245, 175, 176, 193, 132, 158, 248, 158, 248, 248, 141, 244, 218, 159, 248, 248, 285, 282, 248, 110, 248, 285, 283, 248, 280, 259, 280, 248, 151, 285, 241, 271, 175, 133, 272, 234, 273, 199, 273, 220, 278, 255, 135, 135, 111, 280, 132, 175, 175, 176, 266, 273, 151, 237, 279, 238, 215, 179, 141, 163, 176, 238, 246, 281, 194, 195, 175, 193, 252, 248, 173, 161, 175, 265, 245, 197, 193, 205, 194, 270, 273, 175, 273, 234, 281, 273, 194, 220, 248, 216, 175, 270, 175, 278, 248, 274, 158, 187, 255, 286, 258, 175, 175, 245, 135, 107, 286, 126, 285, 127, 173, 247, 175, 273, 273, 285, 195, 238, 273, 248, 205, 193, 342, 175, 273, 179, 141, 194, 232, 273, 173, 266, 168, 199, 193, 141, 278, 173, 179, 289, 141, 193, 273, 238, 282, 248, 126, 175, 273, 157, 136, 132, 195, 216, 193, 130, 132, 157, 255, 164, 132, 341, 220, 193, 220, 113, 286, 220, 175, 193, 179, 273, 175, 176, 175, 281, 194, 242, 272, 179, 169, 179, 157, 135, 107, 248, 272, 273, 248, 274, 175, 248, 161, 211, 245, 125, 273, 273, 278, 236, 282, 199, 232, 248, 248, 232, 205, 245, 195, 195, 175, 175, 273, 205, 273, 194, 282, 273, 162, 240, 79, 175, 259, 272, 127, 250, 273, 175, 135, 248, 248, 273, 282, 205, 282, 267, 159, 282, 273, 266, 248, 248, 282, 214, 175, 273, 273, 175, 248, 282, 245, 175, 211, 213, 163, 273, 337, 181, 275, 195, 258, 151, 282, 245, 238, 224, 176, 248, 282, 278, 248, 175, 175, 190, 248, 248, 220, 175, 175, 282, 273, 282, 282, 273, 337, 273, 282, 248, 175, 138, 273, 245, 282, 248, 337, 248, 159, 282, 175, 275, 266, 278, 175, 248, 282, 143, 175, 267, 175, 259, 248, 248, 245, 175, 138, 113, 282, 176, 175, 282, 175, 278, 275, 220, 278, 168, 248, 248, 241, 248, 248, 175, 245, 273, 245, 177, 273, 246, 248, 274, 220, 282, 110, 175, 135, 282, 273, 197, 205, 135, 176, 143, 176, 220, 282, 157, 158, 110, 179, 134, 175, 278, 195, 272, 174, 220, 273, 272, 248, 285, 273, 248, 248, 135, 248, 237, 273, 248, 126, 175, 216, 135, 209, 195, 278, 248, 163, 151, 106, 273, 193, 109, 274, 172, 282, 178, 248, 216, 273, 248, 127, 248, 158, 158, 175, 245, 281, 266, 248, 195, 248, 220, 179, 179, 282, 248, 281, 190, 155, 130, 271, 136, 238, 164, 282, 105, 220, 282, 175, 157, 179, 194, 130, 245, 238, 205, 234, 132, 248, 216, 211, 275, 273, 242, 266, 249, 267, 238, 195, 254, 175, 246, 249, 152, 273, 258, 136, 143, 245, 175, 282, 194, 238, 156, 242, 175, 193, 134, 276, 272, 273, 273, 280, 176, 244, 105, 157, 176, 180, 248, 195, 245, 275, 157, 179, 273, 168, 179, 337, 273, 193, 173, 273, 161, 175, 245, 278, 282, 245, 248, 224, 248, 245, 265, 175, 283, 238, 283, 157, 281, 105, 249, 273, 266, 280, 151, 158, 218, 280, 159, 248, 176, 179, 179, 157, 179, 218, 136, 245, 179, 179, 237, 127, 216, 248, 238, 175, 280, 136, 282, 273, 248, 337, 278, 213, 267, 282, 236, 266, 176, 110, 151, 248, 282, 110, 220, 286, 172, 248, 273, 205, 242, 173, 248, 193, 211, 270, 275, 248, 193, 163, 273, 285, 266, 151, 248, 143, 282, 132, 242, 271, 258, 175, 246, 105, 285, 133, 175, 249, 278, 220, 283, 278, 220, 159, 273, 236, 280, 175, 248, 110, 341, 125, 141, 220, 280, 193, 337, 234, 176, 196, 273, 175, 137, 173, 163, 277, 163, 194, 179, 337, 245, 273, 236, 196, 286, 266, 275, 248, 110, 151, 163, 179, 158, 179, 348, 236, 245, 248, 241, 282, 271, 239, 248, 193, 251, 283, 259, 245, 196, 220, 273, 245, 248, 141, 271, 220, 282, 272, 195, 248, 245, 175, 157, 106, 213, 175, 282, 273, 193, 245, 248, 213, 193, 351, 234, 281, 239, 272, 241, 193, 220, 213, 248, 273, 151, 249, 249, 157, 249, 249, 157, 249, 220, 257, 249, 193, 286, 266, 193, 139, 215, 193, 158, 258, 174, 275, 248, 215, 205, 176, 277, 175, 281, 280, 155, 249, 249, 195, 238, 241, 273, 159, 283, 280, 286, 245, 168, 245, 232, 132, 127, 193, 245, 245, 277, 175, 179, 216, 158, 285, 272, 175, 337, 282, 237, 281, 273, 144, 334, 163, 135, 273, 120, 144, 179, 158, 205, 275, 205, 245, 245, 337, 266, 248, 241, 110, 193, 273, 274, 331, 177, 194, 236, 224, 245, 180, 280, 239, 154, 270, 334, 161, 248, 176, 130, 278, 267, 163, 159, 250, 158, 244, 273, 275, 176, 163, 220, 193, 286, 334, 220, 110, 156, 286, 141, 163, 205, 105, 132, 282, 249, 245, 193, 273, 242, 173, 242, 57, 239, 152, 152, 286, 280, 159, 249, 161, 242, 213, 273, 259, 259, 155, 179, 163, 195, 157, 176, 234, 271, 224, 220, 245, 273, 176, 236, 234, 157, 280, 110, 151, 214, 271, 249, 158, 248, 158, 281, 132, 245, 262, 282, 242, 141, 270, 278, 158, 179, 193, 205, 193, 248, 337, 337, 163, 157, 179, 244, 193, 220, 244, 158, 158, 234, 249, 331, 273, 111, 125, 278, 163, 267, 248, 158, 267, 278, 245, 135, 283, 181, 248, 179, 215, 241, 179, 234, 241, 273, 273, 193, 220, 176, 237, 132, 193, 176, 272, 175, 179, 257, 163, 105, 282, 282, 135, 132, 273, 273, 245, 273, 157, 270, 176, 109, 277, 237, 280, 234, 275, 273, 248, 145, 251, 273, 175, 179, 179, 193, 157, 281, 132, 251, 175, 176, 262, 248, 248, 195, 157, 248, 195, 234, 273, 195, 241, 220, 248, 278, 273, 244, 195, 282, 157, 236, 176, 232, 248, 163, 250, 274, 273, 245, 175, 220, 273, 282, 216, 245, 220, 173, 248, 175, 259, 273, 195, 175, 194, 214, 278, 176, 238, 193, 163, 193, 110, 244, 195, 234, 175, 273, 176, 220, 177, 175, 248, 244, 157, 245, 163, 195, 245, 337, 273, 273, 273, 163, 125, 138, 161, 194, 176, 216, 236, 176, 248, 220, 266, 220, 175, 245, 241, 220, 132, 245, 281, 237, 273, 275, 238, 215, 175, 157, 208, 266, 163, 127, 244, 266, 241, 275, 135, 175, 282, 245, 337, 157, 199, 163, 176, 193, 285, 248, 141, 245, 141, 248, 245, 249, 279, 245, 175, 248, 181, 245, 282, 271, 173, 248, 256, 135, 237, 193, 214, 193, 107, 130, 270, 273, 273, 282, 345, 245, 175, 248, 175, 285, 176, 286, 242, 158, 175, 136, 248, 135, 337, 272, 111, 242, 248, 179, 272, 176, 271, 175, 135, 273, 175, 273, 237, 273, 273, 113, 173, 175, 245, 286, 249, 282, 248, 193, 232, 248, 158, 248, 273, 151, 175, 240, 262, 244, 193, 272, 238, 248, 220, 282, 238, 239, 220, 281, 141, 239, 244, 241, 213, 175, 249, 237, 241, 278], "In_Frame_Del": [336, 162, 113, 110, 177, 177, 250, 255, 239, 238, 265, 255, 239, 155, 177, 139, 274, 177, 268, 155, 173, 202, 282, 238, 156, 218, 252, 177, 254, 191, 178, 252], "Frame_Shift_Del": [154, 44, 229, 377, 382, 22, 294, 73, 204, 162, 333, 242, 304, 211, 209, 128, 328, 209, 251, 174, 108, 171, 211, 242, 167, 110, 342, 90, 122, 209, 303, 110, 147, 102, 131, 242, 308, 339, 115, 292, 209, 164, 203, 209, 128, 238, 391, 164, 139, 258, 249, 122, 252, 229, 64, 275, 242, 42, 154, 313, 139, 212, 194, 282, 264, 219, 199, 271, 58, 209, 283, 79, 139, 330, 297, 195, 383, 32, 342, 229, 85, 211, 37, 41, 90, 206, 302, 203, 111, 99, 27, 151, 135, 240, 135, 118, 137, 294, 191, 128, 320, 178, 58, 260, 250, 200, 238, 84, 97, 263, 248, 251, 194, 173, 36, 73, 158, 54, 154, 339, 305, 35, 294, 220, 143, 152, 148, 115, 154, 333, 212, 49, 315, 35, 154, 73, 320, 158, 209, 224, 124, 140, 330, 272, 345, 261, 284, 47, 218, 122, 277, 229, 141, 122, 342, 86, 203, 319, 209, 90, 86, 301, 103, 226, 82, 339, 229, 35, 281, 284, 266, 35, 152, 43, 242, 167, 61], "Nonsense_Mutation": [277, 204, 183, 192, 221, 192, 144, 171, 192, 287, 53, 331, 286, 180, 167, 331, 331, 294, 317, 183, 331, 342, 342, 213, 306, 213, 342, 196, 124, 196, 114, 196, 342, 331, 56, 213, 196, 280, 306, 167, 213, 196, 196, 213, 176, 342, 196, 91, 192, 213, 294, 331, 51, 198, 285, 213, 213, 91, 306, 100, 342, 196, 287, 136, 306, 342, 306, 196, 171, 196, 213, 213, 213, 146, 196, 306, 306, 91, 167, 317, 342, 124, 294, 204, 294, 306, 325, 91, 343, 94, 342, 196, 196, 342, 201, 196, 144, 171, 331, 136, 294, 201, 298, 205, 298, 136, 306, 266, 298, 166, 101, 213, 294, 196, 196, 306, 213, 91, 56, 342, 213, 331, 266, 196, 171, 38, 196, 52, 306, 103, 104, 306, 213, 298, 298, 342, 286, 68, 336, 56, 196, 204, 306, 196, 213, 192, 163, 306, 205, 144, 192, 68, 213, 199, 213, 204, 91, 136, 192, 277, 221, 306, 292, 196, 146, 196, 286, 354, 213, 68, 171, 349, 53, 213, 331, 209, 285, 183, 166, 346, 141, 52, 331, 317, 339, 343, 213, 144, 198, 167, 351, 196, 192, 236, 192, 343, 258, 298, 343, 198, 298, 298, 91, 196, 306, 221, 298, 305, 183, 65, 68, 271, 213, 103, 213, 204, 287, 306, 65, 136, 348, 342, 146, 196, 306, 342, 144, 198, 271, 192, 349, 146, 321, 196, 51, 213, 53, 331, 192, 305, 221, 204, 204, 342, 306, 213, 94, 306, 91, 213, 306, 213, 192, 342, 331, 144, 146]};
var posy = {"Frame_Shift_Ins": [20, 32, 161, 175, 206, 220, 228, 237, 244, 320, 324, 328, 350, 389, 415, 438, 498, 530, 532, 567, 577, 709, 763, 773, 781, 787, 823, 829, 887, 911, 967, 995, 1011, 1016, 1036, 1051, 1058, 1098, 1118, 1119, 1127, 1130, 1131, 1133, 1134, 1317, 1336, 1440, 1457, 1503, 1549, 1574, 1590, 1596, 1618, 1624, 1686, 1695, 1734, 1788, 1800, 1823, 1834, 1879, 1894], "In_Frame_Ins": [533, 576, 586, 865, 1057, 1409], "Splice_Site": [62, 68, 83, 127, 132, 137, 154, 156, 176, 181, 212, 225, 252, 258, 292, 311, 318, 348, 387, 396, 407, 413, 431, 448, 461, 467, 477, 490, 549, 551, 560, 572, 600, 601, 608, 610, 623, 630, 639, 645, 654, 681, 722, 729, 736, 743, 750, 766, 785, 790, 800, 813, 821, 825, 841, 846, 849, 864, 889, 893, 905, 936, 951, 989, 994, 996, 1015, 1018, 1025, 1059, 1069, 1072, 1077, 1100, 1105, 1106, 1109, 1110, 1129, 1132, 1140, 1180, 1188, 1208, 1237, 1243, 1273, 1309, 1333, 1344, 1348, 1356, 1359, 1363, 1387, 1408, 1423, 1434, 1473, 1474, 1479, 1482, 1499, 1501, 1512, 1514, 1515, 1524, 1526, 1538, 1542, 1545, 1571, 1579, 1580, 1584, 1588, 1592, 1605, 1616, 1619, 1625, 1628, 1650, 1660, 1668, 1687, 1700, 1709, 1731, 1758, 1772, 1781, 1785, 1787, 1790, 1803, 1812, 1819, 1821, 1852, 1870, 1875, 1910], "Translation_Start_Site": [914], "Missense_Mutation": [0, 1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 65, 66, 67, 69, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 99, 101, 102, 103, 107, 108, 109, 111, 112, 113, 114, 116, 120, 122, 123, 124, 125, 128, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 158, 159, 160, 162, 163, 166, 168, 169, 170, 172, 177, 178, 179, 180, 182, 183, 184, 185, 192, 193, 194, 195, 197, 198, 203, 204, 207, 208, 209, 213, 215, 217, 219, 221, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 245, 246, 248, 250, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 303, 304, 306, 308, 310, 312, 313, 314, 315, 316, 319, 321, 322, 323, 325, 326, 327, 330, 331, 332, 334, 336, 338, 340, 342, 344, 345, 347, 351, 353, 354, 355, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 433, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 519, 521, 522, 523, 524, 525, 527, 531, 535, 536, 537, 538, 540, 541, 544, 545, 547, 548, 550, 552, 555, 559, 561, 562, 564, 565, 566, 568, 569, 573, 575, 578, 579, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 599, 602, 605, 606, 607, 611, 612, 613, 615, 618, 619, 620, 621, 622, 624, 625, 628, 631, 633, 634, 636, 637, 638, 640, 642, 643, 644, 646, 647, 649, 651, 652, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 705, 706, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 744, 746, 747, 748, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 778, 782, 783, 784, 786, 788, 789, 792, 793, 795, 796, 797, 799, 803, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 822, 824, 826, 827, 830, 831, 834, 837, 840, 843, 844, 845, 847, 848, 850, 851, 852, 854, 856, 857, 858, 859, 862, 863, 866, 868, 869, 870, 874, 876, 878, 879, 880, 883, 884, 885, 886, 888, 891, 892, 897, 898, 899, 900, 901, 902, 903, 906, 909, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 934, 935, 939, 940, 941, 942, 946, 947, 948, 952, 954, 957, 959, 960, 963, 964, 965, 968, 969, 972, 973, 975, 976, 977, 978, 979, 983, 985, 988, 990, 993, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1038, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1052, 1053, 1056, 1061, 1062, 1063, 1065, 1067, 1068, 1070, 1074, 1076, 1078, 1081, 1082, 1084, 1085, 1086, 1087, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1102, 1104, 1107, 1108, 1112, 1113, 1116, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1135, 1136, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1151, 1152, 1153, 1155, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1174, 1176, 1177, 1178, 1181, 1182, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1209, 1212, 1215, 1216, 1217, 1218, 1219, 1224, 1225, 1226, 1227, 1230, 1231, 1234, 1235, 1236, 1238, 1244, 1245, 1247, 1248, 1249, 1251, 1254, 1256, 1257, 1258, 1259, 1261, 1265, 1266, 1268, 1270, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1319, 1320, 1322, 1323, 1325, 1328, 1329, 1331, 1332, 1334, 1337, 1338, 1340, 1341, 1342, 1345, 1346, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1380, 1381, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1411, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1424, 1426, 1427, 1431, 1433, 1435, 1436, 1439, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1451, 1452, 1453, 1456, 1459, 1460, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1475, 1476, 1477, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1496, 1498, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1529, 1532, 1533, 1534, 1537, 1539, 1541, 1543, 1544, 1546, 1548, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1559, 1560, 1565, 1566, 1567, 1568, 1569, 1572, 1573, 1575, 1576, 1578, 1582, 1585, 1586, 1591, 1593, 1594, 1597, 1599, 1600, 1601, 1603, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1620, 1621, 1623, 1627, 1630, 1631, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1678, 1680, 1681, 1682, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1698, 1701, 1702, 1704, 1705, 1707, 1708, 1710, 1712, 1714, 1715, 1717, 1718, 1719, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1733, 1738, 1739, 1741, 1742, 1744, 1745, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1786, 1789, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1801, 1802, 1804, 1805, 1807, 1808, 1810, 1811, 1813, 1814, 1815, 1817, 1818, 1820, 1822, 1824, 1829, 1830, 1831, 1832, 1833, 1836, 1838, 1839, 1840, 1842, 1843, 1844, 1847, 1848, 1849, 1851, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1865, 1866, 1869, 1871, 1872, 1873, 1876, 1877, 1880, 1881, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921], "In_Frame_Del": [54, 119, 121, 174, 363, 528, 539, 570, 574, 614, 632, 653, 689, 702, 762, 915, 930, 931, 958, 962, 1050, 1120, 1318, 1343, 1362, 1429, 1447, 1518, 1577, 1598, 1846, 1907], "Frame_Shift_Del": [56, 57, 63, 64, 73, 92, 97, 110, 117, 126, 130, 133, 148, 149, 152, 153, 157, 164, 165, 167, 171, 173, 186, 191, 196, 199, 201, 202, 205, 211, 214, 231, 249, 266, 269, 272, 273, 333, 337, 343, 356, 397, 445, 534, 542, 546, 553, 557, 558, 581, 595, 597, 598, 616, 617, 648, 650, 656, 660, 677, 687, 707, 708, 730, 731, 777, 779, 780, 791, 804, 806, 819, 828, 833, 839, 855, 871, 873, 875, 881, 882, 894, 895, 896, 904, 929, 937, 938, 943, 944, 949, 955, 974, 982, 984, 986, 1012, 1019, 1032, 1033, 1037, 1040, 1045, 1064, 1079, 1080, 1091, 1111, 1154, 1157, 1168, 1175, 1179, 1192, 1213, 1239, 1241, 1242, 1252, 1253, 1255, 1264, 1267, 1295, 1297, 1326, 1327, 1330, 1335, 1361, 1379, 1398, 1442, 1454, 1455, 1458, 1463, 1481, 1492, 1497, 1531, 1563, 1564, 1602, 1604, 1606, 1632, 1643, 1665, 1675, 1679, 1716, 1720, 1736, 1737, 1750, 1763, 1765, 1774, 1784, 1795, 1816, 1826, 1828, 1837, 1850, 1853, 1858, 1862, 1864, 1868, 1874, 1878, 1886, 1895, 1915, 1922], "Nonsense_Mutation": [2, 6, 11, 18, 21, 23, 25, 43, 45, 46, 47, 70, 75, 85, 94, 100, 104, 105, 106, 115, 118, 129, 138, 187, 188, 189, 190, 200, 210, 216, 218, 222, 242, 243, 247, 256, 276, 277, 296, 300, 301, 302, 305, 307, 309, 317, 329, 335, 339, 341, 346, 349, 352, 359, 373, 384, 403, 424, 432, 434, 435, 459, 480, 481, 496, 504, 507, 509, 514, 518, 520, 526, 529, 543, 554, 556, 563, 571, 580, 582, 603, 604, 609, 626, 627, 629, 635, 641, 655, 659, 663, 701, 713, 745, 753, 770, 776, 794, 798, 801, 802, 805, 807, 816, 832, 835, 836, 838, 842, 853, 860, 861, 867, 872, 877, 890, 907, 908, 910, 924, 932, 933, 945, 950, 953, 956, 961, 966, 970, 971, 980, 981, 987, 991, 992, 1004, 1021, 1035, 1039, 1054, 1055, 1060, 1066, 1071, 1073, 1075, 1083, 1088, 1089, 1101, 1103, 1114, 1115, 1117, 1137, 1144, 1148, 1150, 1156, 1158, 1163, 1172, 1183, 1199, 1203, 1210, 1211, 1214, 1220, 1221, 1222, 1223, 1228, 1229, 1232, 1233, 1240, 1246, 1250, 1260, 1262, 1263, 1269, 1271, 1272, 1279, 1280, 1283, 1292, 1304, 1306, 1311, 1316, 1321, 1324, 1339, 1347, 1366, 1372, 1377, 1378, 1382, 1391, 1401, 1410, 1412, 1413, 1419, 1425, 1428, 1430, 1432, 1437, 1438, 1450, 1461, 1478, 1483, 1502, 1523, 1530, 1535, 1536, 1547, 1553, 1555, 1570, 1595, 1607, 1608, 1622, 1626, 1633, 1635, 1648, 1676, 1694, 1706, 1711, 1729, 1740, 1743, 1747, 1749, 1806, 1809, 1825, 1827, 1835, 1841, 1845, 1857, 1867, 1882, 1902, 1917, 1923]};
var variants = ['Missense_Mutation', 'Nonsense_Mutation', 'Frame_Shift_Ins','In_Frame_Del', 'Frame_Shift_Del', 'Splice_Site', 'In_Frame_Ins','Translation_Start_Site'];

// prepare data for histogram
function countBy(l) {
	var result = {};
	for (var item in l) {
		if (l[item] in result) {
			result[l[item]]++;
		} else {
			result[l[item]] = 1;
		}
	}
	return result;
}
//flatten the position x
tmplist = []
for (var i in variants) {
	var variant = variants[i];
	tmplist.push.apply(tmplist, posx[variant]);
}

var histogram_data = {};
histogram_data = countBy(tmplist);
console.log(histogram_data);

var keys = []
for (var k in histogram_data) {
    console.log(k);
    keys.push(parseInt(k));
}
var values = Object.values(histogram_data);

////////////////////////
//// starting point ///
/////////////////////////
var formatCount = d3.format(",.0f");

var margin = {top: 20, right: 30, bottom: 30, left: 30},
    margin2 = {top: 430, right: 10, bottom: 20, left: 40},
    width = 1200 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;
    height = height / 3;
    height2 = 500 - margin2.top - margin2.bottom;
    height2 = height2 / 3;

// prepare xscale and yscale

var minX = d3.min(keys);
var maxX = d3.max(keys);


var xscale = d3.scale.linear()
            .domain([minX, maxX])
            .range([0, width]);
var xscale2 = d3.scale.linear()
                .domain([minX, maxX])
                .range([0, width]);

var maxY = d3.max(values);
var yscale = d3.scale.linear()
            .domain([0, maxY])
            .range([0, height]);
var yscale2 = d3.scale.linear()
                .domain([0, maxY])
                .range([0, height]);

// create axis using scales
var xAxis = d3.svg.axis()
            .scale(xscale)
            .orient('bottom'),
    xAxis2 = d3.svg.axis()
            .scale(xscale2)
            .orient('bottom'),
    yAxis = d3.svg.axis()
            .scale(yscale).orient('left');

// set brush
// var brush = d3.svg.brush()
//                 .x(xscale2)
//                 .on('brush', brushed);

var svg = d3.select('#section4').append('svg')
                .attr('transform', "translate(100, 0)")
                .attr('width', width + margin.left + margin.right)
                .attr('height', height + margin.top + margin.bottom);

svg.append('defs').append('clipPath')
    .attr('id', 'clip')
    .append('rect')
        .attr('width', width)
        .attr('height', height);

var focus = svg.append('g')
                .attr('class', 'focus')
                .attr('transform', 'translate('+margin.left+','+margin.top+')');

var context = svg.append('g')
                .attr('class', 'context')
                .attr('transform', 'translate('+margin.left + ',0)');
// var g = svg.append('g')
//                 
//                 .style('position', 'absolute')
//                 ;
                
var zoom = d3.behavior.zoom()
                .scaleExtent([1,30])
                .on('zoom', draw);
// .scaleExtent([0.8, 2]);
// .x(xscale);
// set up zoom behavior
var rect = svg.append('svg:rect')
                .attr('class', 'pane')
                .attr('width', width)
                .attr('height', height)
                .attr('opacity', 0)
                .attr('transform', 'translate('+margin.left+','+margin.top+')')
                .call(zoom);
zoom.x(xscale);
// var a = svg
//       .append("g")
//       .attr("id", "zoomG");

// a.call(zoom
//     .on("zoom", 
//         function () {
//         //a.attr("transform", "translate(" + d3.event.translate + ")" + " scale(" + d3.event.scale + ")")
//             //zoom.x(xscale2);
//             var t = d3.event;
//             xscale.domain(t.scale(xscale2).domain());
//             for (var i = 0; i < values.length; i++) {
//                 a.append('rect')
//                 .attr('width', 2)
//                 .attr('height', function() {
//                     //console.log("y" + yscale(values[i]));
//                     return yscale(values[i]);

//                 })
//                 .attr('y', function() {
//                     return height - yscale(values[i]);
//                 })
//                 .attr('x', function() {
//                     return xscale(keys[i]);
//                 })
//                 .attr('fill', 'black')
//                 .on('mouseover', function() {
//                     console.log("#################");
//                     d3.select(this)
//                         .style('opacity', 0.5)
//                 })
//                 .on('mouseout', function() {
//                     d3.select(this)
//                         .style('opacity', 1)
//                 });

//             }
//             a.select('.x axis').call(xAxis);
//         }
// //svg.select('x axis').call(xAxis);
// ));

// a.append('g')
//     .attr('class', 'x axis')
//     .call(xAxis);

for (var i = 0; i < values.length; i++) {
    focus.append('rect')
    .attr('class', 'zoombars')
    .attr('width', 2)
    .attr('height', function() {
        //console.log("y" + yscale(values[i]));
        return yscale(values[i]);

    })
    .attr('y', function() {
        return height - yscale(values[i]);
    })
    .attr('x', function() {
        return xscale(keys[i]);
    })
    .attr('fill', 'black')
    .on('mouseover', function() {
        console.log("#################");
        d3.select(this)
            .style('opacity', 0.5)
    })
    .on('mouseout', function() {
        d3.select(this)
            .style('opacity', 1)
    });

}

focus.append('g')
        .attr('class', 'x axis')
        .attr('transform', 'translate(0,'+height+')')
        .call(xAxis);

focus.append('g')
        .attr('class', 'y axis')
        .call(yAxis);

var brush = d3.svg.brush()
                .x(xscale2)
                .on('brush', brushed)

context.append('g')
        .attr('class', 'x brush')
        .call(brush)
        .selectAll('rect')
            .attr('y', -6)
            .attr('height', height2 + 7);

function brushed() {
    xscale.domain(brush.empty() ? xscale2.domain() : brush.extent());
    focus.selectAll('.zoombars').remove();
    for (var i = 0; i < values.length; i++) {
    focus.append('rect')
    .attr('class', 'zoombars')
    .attr('width', 2)
    .attr('height', function() {
        //console.log("y" + yscale(values[i]));
        return yscale(values[i]);

    })
    .attr('y', function() {
        return height - yscale(values[i]);
    })
    .attr('x', function() {
        return xscale(keys[i]);
    })
    .attr('fill', 'black')
    .on('mouseover', function() {
        console.log("#################");
        d3.select(this)
            .style('opacity', 0.5)
    })
    .on('mouseout', function() {
        d3.select(this)
            .style('opacity', 1)
    });

    }
    focus.select('.x.axis').call(xAxis);
    zoom.x(xscale);
}


function draw() {
    focus.selectAll('.zoombars').remove();
    for (var i = 0; i < values.length; i++) {
    focus.append('rect')
    .attr('class', 'zoombars')
    .attr('width', 2)
    .attr('height', function() {
        //console.log("y" + yscale(values[i]));
        return yscale(values[i]);

    })
    .attr('y', function() {
        return height - yscale(values[i]);
    })
    .attr('x', function() {
        return xscale(keys[i]);
    })
    .attr('fill', 'black')
    .on('mouseover', function() {
        console.log("#################");
        d3.select(this)
            .style('opacity', 0.5)
    })
    .on('mouseout', function() {
        d3.select(this)
            .style('opacity', 1)
    });

}
    focus.select('.x.axis').call(xAxis);
    brush.extent(xscale.domain());
    svg.select('.brush').call(brush);
}


for (var i = 0; i < values.length; i++) {
    context.append('rect')
    .attr('class', 'contextbars')
    .attr('width', 2)
    .attr('height', function() {
        //console.log("y" + yscale(values[i]));
        return yscale2(values[i]);

    })
    .attr('y', function() {
        return height2 - yscale2(values[i]);
    })
    .attr('x', function() {
        return xscale2(keys[i]);
    })
    .attr('fill', 'black')
    .on('mouseover', function() {
        d3.select(this)
            .style('opacity', 0.5)
    })
    .on('mouseout', function() {
        d3.select(this)
            .style('opacity', 1)
    });

}
 context.append('g')
        .attr('class', 'x axis')
        .attr('transform', 'translate(0,'+height2+')')
        .call(xAxis2);



//svg.selectAll('Path').style('stroke-width', '1px');


















